//const botconfig = require("./botconfig.json");
const tokenfile = require("./token.json");
const Discord = require("discord.js");
const fs = require("fs");
const bot = new Discord.Client({disableEveryone: true});
const serverid = "474975625011003393";

let requests = JSON.parse(fs.readFileSync("./database/requests.json", "utf8"));
let blacklist = JSON.parse(fs.readFileSync("./database/blacklist names.json", "utf8"));
let reqrem = JSON.parse(fs.readFileSync("./database/requests remove.json", "utf8"));
const nrpnames = new Set(); // –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –Ω–∏–∫–∏ –±—É–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –≤ nrpnames
const sened = new Set(); // –£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –±—É–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –≤ sened
const support_cooldown = new Set(); // –ó–∞–ø—Ä–æ—Å—ã –æ—Ç –∏–≥—Ä–æ–∫–æ–≤.
const snyatie = new Set(); // –£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ –±—ã–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –≤ snyatie

const cooldowncommand = new Set();

tags = ({
    "H": "üéÑ Highgarden Family ‚òÜ",
	"A": "üéÑ Administrator üéÑ",
	"K": "üéÑ Kolodkin Family ‚òÜ",
});

let manytags = [
"A",
"H",
"K",
];
let rolesgg = ["üéÑ Highgarden Family ‚òÜ", "üéÑ Administrator üéÑ", "üéÑ Kolodkin Family ‚òÜ"];
let canremoverole = ["üéÑ –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å —Å–µ–º—å–∏ ‚ôï", "üéÑ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä Discord‚Ñ¢", "‚òÜ –£–ø—Ä–∞–≤–ª—è—é—â–∏–π —Å–æ—Å—Ç–∞–≤ —Å–µ–º—å–∏ ‚òÜ"];

const events = {
    MESSAGE_REACTION_ADD: 'messageReactionAdd',
    MESSAGE_REACTION_REMOVE: 'messageReactionRemove',
};

function checknick (member, role, startnum, endnum, bot, message){
    if (member.roles.some(r => [role].includes(r.name))){
        let ruletagst = startnum
        let ruletagend = endnum
        let rpname = false;
        for (i in manytags){
            if (i >= ruletagst && i <= ruletagend)
            if (member.displayName.toUpperCase().includes(manytags[i])) rpname = true;
        }
        if (!rpname){
            if (!nrpnames.has(member.id)){
                for (var i in rolesgg){
                    let rolerem = bot.guilds.find(g => g.id == message.guild.id).roles.find(r => r.name == rolesgg[i]);
                    if (member.roles.some(role=>[rolesgg[i]].includes(role.name))){
                        member.removeRole(rolerem).then(() => {	
                            setTimeout(function(){
                                if(member.roles.has(rolerem)){
                                    member.removeRole(rolerem);
                                }
                            }, 5000);
                        }).catch(console.error);
                    }
                }
                nrpnames.add(member.id)
            }
        }
    }
}




bot.on("ready", async () => {
  console.log(`${bot.user.username} –∑–∞–ø—É—â–µ–Ω –Ω–∞  ${bot.guilds.size} —Å–µ—Ä–≤–µ—Ä–∞—Ö!`);
  console.log(`–ê–≤—Ç–æ—Ä –±–æ—Ç–∞: –õ—É–Ω—è—à–∞`);
  console.log(`–ê–≤—Ç–æ—Ä –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–∏—Å—Ç–µ–º: Kory_McGregor (–ê—Ä—Ç—ë–º –ú—è—Å–Ω–∏–∫–æ–≤)`);
  //bot.guilds.find(g => g.id == "474975625011003393").channels.find(c => c.name == "general-startbot").send(`\`–ë–æ—Ç –ú–∞–∫–î–∞–∫ –∑–∞–ø—É—â–µ–Ω!\``);
  bot.user.setActivity("/botinfo - —É–∑–Ω–∞—Ç—å –æ –±–æ—Ç–µ", {type: "WATCHING"});

  //bot.user.setGame("on SourceCade!");
});

bot.login(tokenfile.token);




bot.on('message', async message => {
    if (message.channel.type == "dm") return // –ï—Å–ª–∏ –≤ –õ–°, —Ç–æ –≤—ã—Ö–æ–¥.
    if (message.guild.id != serverid && message.guild.id != "519051115191336984") return
   // if (message.type === "PINS_ADD") if (message.channel.name == "requests-for-roles") message.delete();
    if (message.content == "/ping") return message.reply("`—è –æ–Ω–ª–∞–π–Ω!`") && console.log(`–ë–æ—Ç –æ—Ç–≤–µ—Ç–∏–ª ${message.member.displayName}, —á—Ç–æ —è –æ–Ω–ª–∞–π–Ω.`)
    if (message.member.id == bot.user.id) return;


if (message.content.startsWith("/accinfo")){
        if (!message.member.hasPermission("MANAGE_ROLES")) return
        let user = message.guild.member(message.mentions.users.first());
        if (user){
            let userroles;
            await user.roles.filter(role => {
                if (userroles == undefined){
                    if (!role.name.includes("everyone")) userroles = `<@&${role.id}>`
                }else{
                    if (!role.name.includes("everyone")) userroles = userroles + `, <@&${role.id}>`
                }
            })
            let perms;
            if (user.permissions.hasPermission("ADMINISTRATOR") || user.permissions.hasPermission("MANAGE_ROLES")){
                perms = "[!] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä [!]";
            }else{
                perms = "–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–¥–º–∏–Ω –ø—Ä–∞–≤."
            }
            if (userroles == undefined){
                userroles = `–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.`
            }
            let date = user.user.createdAt;
            let registed = `${date.getFullYear()}.${(date.getMonth() + 1).toString().padStart(2, '0')}.${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}:${date.getSeconds().toString().padStart(2, '0')}`
            date = user.joinedAt
            let joindate = `${date.getFullYear()}.${(date.getMonth() + 1).toString().padStart(2, '0')}.${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}:${date.getSeconds().toString().padStart(2, '0')}`
            const embed = new Discord.RichEmbed()
            .setColor("#FF0000")
            .setFooter(`–ê–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.displayName}`, user.user.avatarURL)
            .setTimestamp()
            .addField(`–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –≤—Ö–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä`, `**–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω:** \`${registed}\`\n**–í–æ—à–µ–ª –∫ –Ω–∞–º:** \`${joindate}\``)
            .addField("Roles and Permissions", `**–†–æ–ª–∏:** ${userroles}\n**PERMISSIONS:** \`${perms}\``)
            message.reply(`**–≤–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø–æ–≤–æ–¥—É –∞–∫–∫–∞—É–Ω—Ç–∞ <@${user.id}>**`, embed)
            return message.delete();
        }else{
            const args = message.content.slice('/accinfo').split(/ +/)
            if (!args[1]) return
            let name = args.slice(1).join(" ");
            let foundmember = false;
            await message.guild.members.filter(f_member => {
                if (f_member.displayName.includes(name)){
                    foundmember = f_member
                }else if(f_member.user.tag.includes(name)){
                    foundmember = f_member
                }
            })
            if (foundmember){
                let user = foundmember
                let userroles;
                await user.roles.filter(role => {
                    if (userroles == undefined){
                        if (!role.name.includes("everyone")) userroles = `<@&${role.id}>`
                    }else{
                        if (!role.name.includes("everyone")) userroles = userroles + `, <@&${role.id}>`
                    }
                })
                let perms;
                if (user.permissions.hasPermission("ADMINISTRATOR") || user.permissions.hasPermission("MANAGE_ROLES")){
                    perms = "[!] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä [!]";
                }else{
                    perms = "–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–¥–º–∏–Ω –ø—Ä–∞–≤."
                }
                if (userroles == undefined){
                    userroles = `–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.`
                }
                let date = user.user.createdAt;
                let registed = `${date.getFullYear()}.${(date.getMonth() + 1).toString().padStart(2, '0')}.${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}:${date.getSeconds().toString().padStart(2, '0')}`
                date = user.joinedAt
                let joindate = `${date.getFullYear()}.${(date.getMonth() + 1).toString().padStart(2, '0')}.${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}:${date.getSeconds().toString().padStart(2, '0')}`
                const embed = new Discord.RichEmbed()
                .setColor("#FF0000")
                .setFooter(`–ê–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.displayName}`, user.user.avatarURL)
                .setTimestamp()
                .addField(`–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è`, `**–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω:** \`${registed}\`\n**–í–æ—à–µ–ª –∫ –Ω–∞–º:** \`${joindate}\``)
                .addField("Roles and Permissions", `**–†–æ–ª–∏:** ${userroles}\n**PERMISSIONS:** \`${perms}\``)
                message.reply(`**–≤–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø–æ–≤–æ–¥—É –∞–∫–∫–∞—É–Ω—Ç–∞ <@${user.id}>**`, embed)
            }
            return message.delete();
        }
    }
	
	    if (message.content.toLowerCase().includes("—Ä–æ–ª—å") && !message.content.toLowerCase().includes(`—Å–Ω–∏–º–∏`) && !message.content.toLowerCase().includes(`—Å–Ω—è—Ç—å`)){
        // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –ª–∏ –Ω–∏–∫.
        if (nrpnames.has(message.member.displayName)){
            if(message.member.roles.some(r=>rolesgg.includes(r.name)) ) {
                for (var i in rolesgg){
                    let rolerem = bot.guilds.find(g => g.id == message.guild.id).roles.find(r => r.name == rolesgg[i]);
                    if (message.member.roles.some(role=>[rolesgg[i]].includes(role.name))){
                        await message.member.removeRole(rolerem); // –ó–∞–±—Ä–∞—Ç—å —Ä–æ–ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ.
                    }
                }
            }
            message.react(`üìõ`) // –ü–æ—Å—Ç–∞–≤–∏—Ç—å –∑–Ω–∞–∫ —Å—Ç–æ–ø –ø–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
            return // –í—ã—Ö–æ–¥
        }
        // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—ç–≥–∏
        for (var i in manytags){
            if (message.member.displayName.toLowerCase().includes("[" + manytags[i].toLowerCase()) || message.member.displayName.toLowerCase().includes(manytags[i].toLowerCase() + "]") || message.member.displayName.toLowerCase().includes("(" + manytags[i].toLowerCase()) || message.member.displayName.toLowerCase().includes(manytags[i].toLowerCase() + ")") || message.member.displayName.toLowerCase().includes("{" + manytags[i].toLowerCase()) || message.member.displayName.toLowerCase().includes(manytags[i].toLowerCase() + "}")){
                let rolename = tags[manytags[i].toUpperCase()] // –£–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—é —Å —Ç—ç–≥–æ–º
                let role = message.guild.roles.find(r => r.name == rolename); // –ù–∞–π—Ç–∏ —ç—Ç—É —Ä–æ–ª—å –Ω–∞ discord —Å–µ—Ä–≤–µ—Ä–µ.
                let reqchat = message.guild.channels.find(c => c.name == `role`); // –ù–∞–π—Ç–∏ —á–∞—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
                if (!role){
                    message.reply(`\`–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –†–æ–ª—å ${rolename} –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞.\``)
                    return console.error(`–†–æ–ª—å ${rolename} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!`);
                }else if(!reqchat){
                    message.reply(`\`–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –ö–∞–Ω–∞–ª requests-for-roles –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!\``)
                    return console.error(`–ö–∞–Ω–∞–ª role –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!`)
                }
                if (message.member.roles.some(r => [rolename].includes(r.name))){
                    return message.react(`üëå`) // –ï—Å–ª–∏ —Ä–æ–ª—å –µ—Å—Ç—å, –ø–æ—Å—Ç–∞–≤–∏—Ç—å –æ–∫–µ–π.
                }
                if (sened.has(message.member.displayName)) return message.react(`üïñ`) // –ï—Å–ª–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª - –ø–æ—Å—Ç–∞–≤–∏—Ç—å —á–∞—Å—ã.
                let nickname = message.member.displayName;
                const embed = new Discord.RichEmbed()
                .setTitle("`Discord ¬ª –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–∏–∫ –Ω–µ–π–º–∞.`")
                .setColor("#483D8B")
                .addField("–ê–∫–∫–∞—É–Ω—Ç", `\`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\` <@${message.author.id}>`, true)
                .addField("–ù–∏–∫–Ω–µ–π–º", `\`–ù–∏–∫:\` ${nickname}`, true)
                .addField("–†–æ–ª—å –¥–ª—è –≤—ã–¥–∞—á–∏", `\`–†–æ–ª—å –¥–ª—è –≤—ã–¥–∞—á–∏:\` <@&${role.id}>`)
                .addField("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å –∫–∞–Ω–∞–ª–∞", `<#${message.channel.id}>`)
                .addField("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –≤—ã–¥–∞—á–∏", `\`[‚úî] - –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å\`\n` + `\`[‚ùå] - –æ—Ç–∫–∞–∑–∞—Ç—å –≤ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏\`\n` + `\`[D] - —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\``)
                .setFooter("¬© Support Team | by Kory_McGregor")
                .setTimestamp()
                reqchat.send(embed).then(async msgsen => {
                    await msgsen.react('‚úî')
                    await msgsen.react('‚ùå')
                    await msgsen.react('üá©')
                    await msgsen.pin();
                })
                sened.add(message.member.displayName); // –ü–æ–º–µ—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–π –Ω–∏–∫, —á—Ç–æ –æ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∑–∞–ø—Ä–æ—Å.
                return message.react(`üì®`);
            }
        }
    }
	
	
	if (message.content.toLowerCase().includes("—Å–Ω–∏–º–∏") || message.content.toLowerCase().includes("—Å–Ω—è—Ç—å")){
        if (!message.member.roles.some(r => canremoverole.includes(r.name)) && !message.member.hasPermission("MANAGE_ROLES")) return
        const args = message.content.split(/ +/)
        let onebe = false;
        let twobe = false;
        args.forEach(word => {
            if (word.toLowerCase().includes(`—Ä–æ–ª—å`)) onebe = true
            if (word.toLowerCase().includes(`—É`)) twobe = true
        })
        if (!onebe || !twobe) return
        if (message.mentions.users.size > 1) return message.react(`üìõ`)
        let user = message.guild.member(message.mentions.users.first());
        if (!user) return message.react(`üìõ`)
        if (snyatie.has(message.author.id + `=>` + user.id)) return message.react(`üïñ`)
        let reqchat = message.guild.channels.find(c => c.name == `role`); // –ù–∞–π—Ç–∏ —á–∞—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
        if(!reqchat){
            message.reply(`\`–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –ö–∞–Ω–∞–ª requests-for-roles –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!\``)
            return console.error(`–ö–∞–Ω–∞–ª requests-for-roles –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω!`)
        }
        let roleremove = user.roles.find(r => rolesgg.includes(r.name));
        if (!roleremove) return message.react(`üìõ`)

        message.reply(`\`–Ω–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —Å–Ω—è—Ç–∏—è —Ä–æ–ª–∏.\``).then(answer => {
            message.channel.awaitMessages(response => response.member.id == message.member.id, {
                max: 1,
                time: 60000,
                errors: ['time'],
            }).then((collected) => {
                const embed = new Discord.RichEmbed()
                .setTitle("`Discord ¬ª –ó–∞–ø—Ä–æ—Å –æ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏.`")
                .setColor("#483D8B")
                .addField("–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å", `\`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\` <@${message.author.id}>`)
                .addField("–ö–æ–º—É —Å–Ω—è—Ç—å —Ä–æ–ª—å", `\`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\` <@${user.id}>`)
                .addField("–†–æ–ª—å –¥–ª—è —Å–Ω—è—Ç–∏—è", `\`–†–æ–ª—å –¥–ª—è —Å–Ω—è—Ç–∏—è:\` <@&${roleremove.id}>`)
                .addField("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å –∫–∞–Ω–∞–ª–∞", `<#${message.channel.id}>`)
                .addField("–ü—Ä–∏—á–∏–Ω–∞ —Å–Ω—è—Ç–∏—è —Ä–æ–ª–∏", `${collected.first().content}`)
                .addField("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", `\`[‚úî] - —Å–Ω—è—Ç—å —Ä–æ–ª—å\`\n` + `\`[‚ùå] - –æ—Ç–∫–∞–∑–∞—Ç—å –≤ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏\`\n` + `\`[D] - —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\``)
                .setFooter("¬© Support Team | by Kory_McGregor")
                .setTimestamp()
                reqchat.send(embed).then(async msgsen => {
                    answer.delete();
                    collected.first().delete();
                    await msgsen.react('‚úî')
                    await msgsen.react('‚ùå')
                    await msgsen.react('üá©')
                    await msgsen.pin();
                })
                snyatie.add(message.author.id + `=>` + user.id)
                return message.react(`üì®`);
            }).catch(() => {
                return answer.delete()
            });
        });
    }
	if (message.content.startsWith("/ffuser")){
        if (!message.member.hasPermission("MANAGE_ROLES")) return
        const args = message.content.slice('/ffuser').split(/ +/)
        if (!args[1]) return
        let name = args.slice(1).join(" ");
        let userfinders = false;
        let foundedusers_nick;
        let numberff_nick = 0;
        let foundedusers_tag;
        let numberff_tag = 0;
        message.guild.members.filter(userff => {
            if (userff.displayName.toLowerCase().includes(name.toLowerCase())){
                if (foundedusers_nick == null){
                    foundedusers_nick = `${numberff_nick + 1}) <@${userff.id}>`
                }else{
                    foundedusers_nick = foundedusers_nick + `\n${numberff_nick + 1}) <@${userff.id}>`
                }
                numberff_nick++
                if (numberff_nick == 15 || numberff_tag == 15){
                    if (foundedusers_tag == null) foundedusers_tag = `–ù–ï –ù–ê–ô–î–ï–ù–´`;
                    if (foundedusers_nick == null) foundedusers_nick = `–ù–ï –ù–ê–ô–î–ï–ù–´`;
                    const embed = new Discord.RichEmbed()
                    .addField(`BY NICKNAME`, foundedusers_nick, true)
                    .addField("BY DISCORD TAG", foundedusers_tag, true)
                    message.reply(`\`–ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω–∞ —Å–ª–µ–¥—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\``, embed); 
                    numberff_nick = 0;
                    numberff_tag = 0;
                    foundedusers_tag = null;
                    foundedusers_nick = null;
                }
                if (!userfinders) userfinders = true;
            }else if (userff.user.tag.toLowerCase().includes(name.toLowerCase())){
                if (foundedusers_tag == null){
                    foundedusers_tag = `${numberff_tag + 1}) <@${userff.id}>`
                }else{
                    foundedusers_tag = foundedusers_tag + `\n${numberff_tag + 1}) <@${userff.id}>`
                }
                numberff_tag++
                if (numberff_nick == 15 || numberff_tag == 15){
                    if (foundedusers_tag == null) foundedusers_tag = `–ù–ï –ù–ê–ô–î–ï–ù–´`;
                    if (foundedusers_nick == null) foundedusers_nick = `–ù–ï –ù–ê–ô–î–ï–ù–´`;
                    const embed = new Discord.RichEmbed()
                    .addField(`BY NICKNAME`, foundedusers_nick, true)
                    .addField("BY DISCORD TAG", foundedusers_tag, true)
                    message.reply(`\`–ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω–∞ —Å–ª–µ–¥—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\``, embed); 
                    numberff_nick = 0;
                    numberff_tag = 0;
                    foundedusers_tag = null;
                    foundedusers_nick = null;
                }
                if (!userfinders) userfinders = true;
            }
        })
        if (!userfinders) return message.reply(`—è –Ω–∏–∫–æ–≥–æ –Ω–µ –Ω–∞—à–µ–ª.`) && message.delete()
        if (numberff_nick != 0 || numberff_tag != 0){
            if (foundedusers_tag == null) foundedusers_tag = `–ù–ï –ù–ê–ô–î–ï–ù–´`;
            if (foundedusers_nick == null) foundedusers_nick = `–ù–ï –ù–ê–ô–î–ï–ù–´`;
            const embed = new Discord.RichEmbed()
            .addField(`BY NICKNAME`, foundedusers_nick, true)
            .addField("BY DISCORD TAG", foundedusers_tag, true)
            message.reply(`\`–ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω–∞ —Å–ª–µ–¥—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\``, embed); 
        }
    }
if (message.content.startsWith('/createfam')){
        if (!message.member.hasPermission("ADMINISTRATOR")) return message.reply(`\`—ç–π! –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤!\``) && message.delete()
        let idmember = message.author.id;
        let family_name;
        let family_leader;
        await message.delete();
        await message.channel.send(`\`[CAB] –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞: [–Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞ –≤ —á–∞—Ç]\n[CAB] –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–∞–±–∏–Ω–µ—Ç–∞ [ID]: [–æ–∂–∏–¥–∞–Ω–∏–µ]\``).then(async delmessage0 => {
            message.channel.awaitMessages(response => response.member.id == message.member.id, {
                max: 1,
                time: 60000,
                errors: ['time'],
            }).then(async (collected) => {
                family_name = `${collected.first().content}`;
                await delmessage0.edit(`\`[CAB] –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞: '${collected.first().content}'\n[CAB] –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–∞–±–∏–Ω–µ—Ç–∞ [ID]: [–Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –Ω–∞–¥–æ —Å–µ–±—è, –æ—Ç–ø—Ä–∞–≤—å –º–∏–Ω—É—Å]\``)
                collected.first().delete();
                message.channel.awaitMessages(response => response.member.id == message.member.id, {
                    max: 1,
                    time: 60000,
                    errors: ['time'],
                }).then(async (collectedd) => {
                    if (!message.guild.members.find(m => m.id == collectedd.first().content)){
                        family_leader = `${idmember}`;
                    }else{
                        family_leader = `${collectedd.first().content}`;
                    }
                    await delmessage0.edit(`\`[CAB] –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞: '${family_name}'\n[CAB] –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–∞–±–∏–Ω–µ—Ç–∞ [ID]: ${message.guild.members.find(m => m.id == family_leader).displayName}\n–°–æ–∑–¥–∞—Ç—å –∫–∞–±–∏–Ω–µ—Ç –∏ —Ä–æ–ª—å [–¥–∞/–Ω–µ—Ç]?\``)
                    collectedd.first().delete();
                    message.channel.awaitMessages(response => response.member.id == message.member.id, {
                        max: 1,
                        time: 20000,
                        errors: ['time'],
                    }).then(async (collecteds) => {
                        if (!collecteds.first().content.toLowerCase().includes('–¥–∞')) return delmessage0.delete();
                        collecteds.first().delete();
                        await delmessage0.delete();

                        let family_channel = null;
                        let myfamily_role = null;
                        await message.guild.channels.filter(async channel => {
                            if (channel.name == family_name){
                                if (channel.type == "voice"){
                                    if (channel.parent.name.toString() == `–ö–∞–±–∏–Ω–µ—Ç—ã`){
                                        family_channel = channel;
                                        await channel.permissionOverwrites.forEach(async perm => {
                                            if (perm.type == `role`){
                                                let role_fam = message.guild.roles.find(r => r.id == perm.id);
                                                if (role_fam.name == channel.name){
                                                    myfamily_role = role_fam;
                                                }
                                            }
                                        })
                                    }
                                }
                            }
                        });
                        if (family_channel != null || myfamily_role != null){
                            message.channel.send(`\`[ERROR]\` <@${idmember}> \`–æ—à–∏–±–∫–∞! –ö–∞–±–∏–Ω–µ—Ç: '${family_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!\``).then(msg => msg.delete(10000));
                            return
                        }

                        let family_role = await message.guild.createRole({
                            name: `${family_name}`,
                            position: message.guild.roles.find(r => r.name == `[!] –ö–∞–±–∏–Ω–µ—Ç—ã [!]`).position - 1,
                        })
                        await message.guild.createChannel(`${family_name}`, "voice").then(async (channel) => {
                            await channel.setParent(message.guild.channels.find(c => c.name == `–ö–∞–±–∏–Ω–µ—Ç—ã`))
                            await channel.overwritePermissions(family_role, {
                                // GENERAL PERMISSIONS
                                CREATE_INSTANT_INVITE: false,
                                MANAGE_CHANNELS: false,
                                MANAGE_ROLES: false,
                                MANAGE_WEBHOOKS: false,
                                // VOICE PERMISSIONS
                                VIEW_CHANNEL: true,
                                CONNECT: true,
                                SPEAK: true,
                                MUTE_MEMBERS: false,
                                DEAFEN_MEMBERS: false,
                                MOVE_MEMBERS: false,
                                USE_VAD: true,
                                PRIORITY_SPEAKER: false,
                            })

                            await channel.overwritePermissions(message.guild.members.find(m => m.id == family_leader), {
                                // GENERAL PERMISSIONS
                                CREATE_INSTANT_INVITE: true,
                                MANAGE_CHANNELS: false,
                                MANAGE_ROLES: false,
                                MANAGE_WEBHOOKS: false,
                                // VOICE PERMISSIONS
                                VIEW_CHANNEL: true,
                                CONNECT: true,
                                SPEAK: true,
                                MUTE_MEMBERS: false,
                                DEAFEN_MEMBERS: false,
                                MOVE_MEMBERS: false,
                                USE_VAD: true,
                                PRIORITY_SPEAKER: true,
                            })

                            await channel.overwritePermissions(message.guild.roles.find(r => r.name == `@everyone`), {
                                // GENERAL PERMISSIONS
                                CREATE_INSTANT_INVITE: false,
                                MANAGE_CHANNELS: false,
                                MANAGE_ROLES: false,
                                MANAGE_WEBHOOKS: false,
                                // VOICE PERMISSIONS
                                VIEW_CHANNEL: false,
                                CONNECT: false,
                                SPEAK: false,
                                MUTE_MEMBERS: false,
                                DEAFEN_MEMBERS: false,
                                MOVE_MEMBERS: false,
                                USE_VAD: false,
                                PRIORITY_SPEAKER: false,
                            })
                            if (message.guild.channels.find(c => c.name == `cabinet-log`)){
                                await message.guild.channels.find(c => c.name == `cabinet-log`).overwritePermissions(family_role, {
                                    // GENERAL PERMISSIONS
                                    CREATE_INSTANT_INVITE: false,
                                    MANAGE_CHANNELS: false,
                                    MANAGE_ROLES: false,
                                    MANAGE_WEBHOOKS: false,
                                    // TEXT PERMISSIONS
                                    VIEW_CHANNEL: true,
                                    SEND_MESSAGES: true,
                                    SEND_TTS_MESSAGES: false,
                                    MANAGE_MESSAGES: false,
                                    EMBED_LINKS: true,
                                    ATTACH_FILES: true,
                                    READ_MESSAGE_HISTORY: true,
                                    MENTION_EVERYONE: false,
                                    USE_EXTERNAL_EMOJIS: true,
                                    ADD_REACTIONS: true,
                                })
                            }
                            await message.guild.members.find(m => m.id == family_leader).addRole(family_role);
                            let general = message.guild.channels.find(c => c.name == `general`);
                            if (general) await general.send(`<@${family_leader}>, \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${idmember}> \`–Ω–∞–∑–Ω–∞—á–∏–ª –≤–∞—Å –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∫–∞–±–∏–Ω–µ—Ç: ${family_name}\``)
                            let fam_chat = message.guild.channels.find(c => c.name == `cabinet-log`);
                            if (fam_chat) await fam_chat.send(`\`[CREATE]\` \`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\` <@${family_leader}> \`—Å—Ç–∞–ª –≥–ª–∞–≤–æ–π –∫–∞–±–∏–Ω–µ—Ç–∞ '${family_name}'! –ù–∞–∑–Ω–∞—á–∏–ª:\` <@${idmember}>`);
                            return
                        })
                    }).catch(() => {
                        return delmessage0.delete();
                    })
                }).catch(() => {
                    return delmessage0.delete();
                })
            }).catch(() => {
                return delmessage0.delete();
            })
        })
    }
	if (message.content.startsWith(`/faminvite`)){
        if (message.content == `/faminvite`){
            message.channel.send(`\`[ERROR]\` <@${message.author.id}> \`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /faminvite [user]\``).then(msg => msg.delete(10000));
            return message.delete();
        }
        let families = [];
        message.guild.channels.filter(async channel => {
            if (channel.type == "voice"){
                if (channel.parent.name.toString() == `–ö–∞–±–∏–Ω–µ—Ç—ã`){
                    await channel.permissionOverwrites.forEach(async perm => {
                        if (perm.type == `member`){
                            if (perm.allowed.toArray().some(r => r == `PRIORITY_SPEAKER`)){
                                if (perm.id == message.author.id) families.push(channel.name);
                            }
                        }
                    })
                }
            }
        })
        if (families.length == 0){
            message.channel.send(`\`[ERROR]\` <@${message.author.id}> \`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≥–ª–∞–≤–æ–π/–∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–º –≥–ª–∞–≤—ã –∫–∞–±–∏–Ω–µ—Ç–∞!\``).then(msg => msg.delete(10000));
            return message.delete();
        }
        let user = message.guild.member(message.mentions.users.first());
        const args = message.content.slice('/faminvite').split(/ +/)

        if (!user){
            message.channel.send(`\`[ERROR]\` <@${message.author.id}> \`—É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! /faminvite [user]\``).then(msg => msg.delete(7000));
            return message.delete();
        }
        if (families.length == 1){
            let fam_role;
            await message.guild.channels.filter(async channel => {
                if (channel.name == families[0]){
                    if (channel.type == "voice"){
                        if (channel.parent.name.toString() == `–ö–∞–±–∏–Ω–µ—Ç—ã`){
                            await channel.permissionOverwrites.forEach(async perm => {
                                if (perm.type == `role`){
                                    let role_fam = message.guild.roles.find(r => r.id == perm.id);
                                    if (role_fam.name == channel.name){
                                        fam_role = role_fam;
                                    }
                                }
                            })
                        }
                    }
                }
            });
           if (user.roles.some(r => r.id == fam_role.id)){
                message.channel.send(`\`[ERROR]\` <@${message.author.id}> \`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.displayName} —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç —É –≤–∞—Å –Ω–∞ —Ä–∞–±–æ—Ç–µ!\``).then(msg => msg.delete(10000));
                return message.delete();
            }
            message.delete();
            let msg = await message.channel.send(`<@${user.id}>, \`—Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–ª–∏ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å —Å–µ–º—å–∏\` <@${message.author.id}> \`–ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –≤–∞—Å –Ω–∞ —Ä–∞–±–æ—Ç—É –≤:\` **<@&${fam_role.id}>**\n\`–ù–∞–∂–º–∏—Ç–µ –≥–∞–ª–æ—á–∫—É –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 —Å–µ–∫—É–Ω–¥, –µ—Å–ª–∏ –≤—ã —Å–æ–≥–ª–∞—Å–Ω—ã –ø—Ä–∏–Ω—è—Ç—å –µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ!\``)
            await msg.react(`‚úî`);
            const reactions = await msg.awaitReactions(reaction => reaction.emoji.name === `‚úî`, {time: 10000});
            let reacton = reactions.get(`‚úî`).users.get(user.id)
            if (reacton == undefined){
                return message.channel.send(`<@${message.author.id}>, \`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.displayName} –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –≤–∞—à–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤—Å—Ç—É–ø–∏—Ç—å –≤ —Å–µ–º—å—é!\``).then(msg => msg.delete(15000));
            }
            if (!user.roles.some(r => r.id == fam_role.id)) user.addRole(fam_role)
            let general = message.guild.channels.find(c => c.name == `general`);
            if (general) await general.send(`<@${user.id}>, \`—Ç–µ–ø–µ—Ä—å –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –∫–∞–±–∏–Ω–µ—Ç–∞ '${families[0]}'! –ü—Ä–∏–≥–ª–∞—Å–∏–ª:\` <@${message.author.id}>`);
            let fam_chat = message.guild.channels.find(c => c.name == `cabinet-log`);
            if (fam_chat) await fam_chat.send(`\`[INVITE]\` <@${message.author.id}> \`–ø—Ä–∏–≥–ª–∞—Å–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\` <@${user.id}> \`–Ω–∞ —Ä–∞–±–æ—Ç—É –≤: '${families[0]}'\``);
            return
        }else{
            return;
		}
    }
	    if (message.content.startsWith(`/famkick`)){
        if (message.content == `/famkick`){
            message.channel.send(`\`[ERROR]\` <@${message.author.id}> \`–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /famkick [user]\``).then(msg => msg.delete(10000));
            return message.delete();
        }
        let families = [];
        message.guild.channels.filter(async channel => {
            if (channel.type == "voice"){
                if (channel.parent.name.toString() == `–ö–∞–±–∏–Ω–µ—Ç—ã`){
                    await channel.permissionOverwrites.forEach(async perm => {
                        if (perm.type == `member`){
                            if (perm.allowed.toArray().some(r => r == `PRIORITY_SPEAKER`)){
                                if (perm.id == message.author.id) families.push(channel.name);
                            }
                        }
                    })
                }
            }
        })
        if (families.length == 0){
            message.channel.send(`\`[ERROR]\` <@${message.author.id}> \`–≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –≥–ª–∞–≤–æ–π/–∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–º –≥–ª–∞–≤—ã –∫–∞–±–∏–Ω–µ—Ç–∞!\``).then(msg => msg.delete(10000));
            return message.delete();
        }
        let user = message.guild.member(message.mentions.users.first());
        const args = message.content.slice('/famkick').split(/ +/)

        if (!user){
            message.channel.send(`\`[ERROR]\` <@${message.author.id}> \`—É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! /famkick [user]\``).then(msg => msg.delete(7000));
            return message.delete();
        }
        if (families.length == 1){
            let fam_role;
            await message.guild.channels.filter(async channel => {
                if (channel.name == families[0]){
                    if (channel.type == "voice"){
                        if (channel.parent.name.toString() == `–ö–∞–±–∏–Ω–µ—Ç—ã`){
                            await channel.permissionOverwrites.forEach(async perm => {
                                if (perm.type == `role`){
                                    let role_fam = message.guild.roles.find(r => r.id == perm.id);
                                    if (role_fam.name == channel.name){
                                        fam_role = role_fam;
                                    }
                                }
                            })
                        }
                    }
                }
            });
            if (!user.roles.some(r => r.id == fam_role.id)){
                message.channel.send(`\`[ERROR]\` <@${message.author.id}> \`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.displayName} –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∞ —É—á—ë—Ç–µ –≤ –≤–∞—à–µ–º –∫–∞–±–∏–Ω–µ—Ç–µ!\``).then(msg => msg.delete(10000));
                return message.delete();
            }
            message.delete();
            if (user.roles.some(r => r.id == fam_role.id)) user.removeRole(fam_role)
            let general = message.guild.channels.find(c => c.name == `general`);
            if (general) await general.send(`<@${user.id}>, \`–≤—ã –±—ã–ª–∏ —É–≤–æ–ª–µ–Ω—ã —Å —Ä–∞–±–æ—Ç—ã '${families[0]}'! –ò—Å—Ç–æ—á–Ω–∏–∫:\` <@${message.author.id}>`);
            let fam_chat = message.guild.channels.find(c => c.name == `cabinet-log`);
            if (fam_chat) await fam_chat.send(`\`[KICK]\` <@${message.author.id}> \`–≤—ã–≥–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\` <@${user.id}> \`—Å —Ä–∞–±–æ—Ç—ã: '${families[0]}'\``);
            return
        }else{
			return
		}
    }
   
});


bot.on('raw', async event => {
    if (!events.hasOwnProperty(event.t)) return; // –ï—Å–ª–∏ –Ω–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å–º–∞–π–ª–∏–∫–∞, —Ç–æ –≤—ã—Ö–æ–¥
    if (event.t == "MESSAGE_REACTION_ADD"){
        let event_guildid = event.d.guild_id // ID discord —Å–µ—Ä–≤–µ—Ä–∞
        let event_channelid = event.d.channel_id // ID –∫–∞–Ω–∞–ª–∞
        let event_userid = event.d.user_id // ID —Ç–æ–≥–æ –∫—Ç–æ –ø–æ—Å—Ç–∞–≤–∏–ª —Å–º–∞–π–ª–∏–∫
        let event_messageid = event.d.message_id // ID —Å–æ–æ–±—â–µ–Ω–∏–µ –∫—É–¥–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω —Å–º–∞–π–ª–∏–∫
        let event_emoji_name = event.d.emoji.name // –ù–∞–∑–≤–∞–Ω–∏–µ —Å–º–∞–π–ª–∏–∫–∞

        if (event_userid == bot.user.id) return // –ï—Å–ª–∏ –ø–æ—Å—Ç–∞–≤–∏–ª —Å–º–∞–π–ª–∏–∫ –±–æ—Ç —Ç–æ –≤—ã—Ö–æ–¥
        if (event_guildid != serverid) return // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥—Ä—É–≥–æ–π —Ç–æ –≤—ã—Ö–æ–¥

        let server = bot.guilds.find(g => g.id == event_guildid); // –ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –∏–∑ –µ–≥–æ ID
        let channel = server.channels.find(c => c.id == event_channelid); // –ü–æ–ª—É—á–∏—Ç—å –∫–∞–Ω–∞–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ —Å–ø–∏—Å–∫—É –∫–∞–Ω–∞–ª–æ–≤
        let message = await channel.fetchMessage(event_messageid); // –ü–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞
        let member = server.members.find(m => m.id == event_userid); // –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞

        if (channel.name != `role`) return // –ï—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –Ω–µ –±—É–¥–µ—Ç 'requests-for-roles', —Ç–æ –≤—ã–π—Ç–∏

        if (event_emoji_name == "üá©"){
            if (!message.embeds[0]){
                channel.send(`\`[DELETED]\` ${member} \`—É–¥–∞–ª–∏–ª –±–∞–≥–Ω—É—Ç—ã–π –∑–∞–ø—Ä–æ—Å.\``);
                return message.delete();
            }else if (message.embeds[0].title == "`Discord ¬ª –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–∏–∫ –Ω–µ–π–º–∞.`"){
                let field_user = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[0].value.split(/ +/)[1]);
                let field_nickname = message.embeds[0].fields[1].value.split(`\`–ù–∏–∫:\` `)[1];
                let field_role = server.roles.find(r => "<@&" + r.id + ">" == message.embeds[0].fields[2].value.split(/ +/)[3]);
                let field_channel = server.channels.find(c => "<#" + c.id + ">" == message.embeds[0].fields[3].value.split(/ +/)[0]);
                if (!field_user || !field_nickname || !field_role || !field_channel){
                    channel.send(`\`[DELETED]\` ${member} \`—É–¥–∞–ª–∏–ª –±–∞–≥–Ω—É—Ç—ã–π –∑–∞–ø—Ä–æ—Å.\``);
                }else{
                    channel.send(`\`[DELETED]\` ${member} \`—É–¥–∞–ª–∏–ª –∑–∞–ø—Ä–æ—Å –æ—Ç ${field_nickname}, —Å ID: ${field_user.id}\``);
                }
                if (sened.has(field_nickname)) sened.delete(field_nickname); // –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∏–∫, —á—Ç–æ –æ–Ω –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∑–∞–ø—Ä–æ—Å
                return message.delete();
            }else if (message.embeds[0].title == '`Discord ¬ª –ó–∞–ø—Ä–æ—Å –æ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏.`'){
                let field_author = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[0].value.split(/ +/)[1]);
                let field_user = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[1].value.split(/ +/)[1]);
                let field_role = server.roles.find(r => "<@&" + r.id + ">" == message.embeds[0].fields[2].value.split(/ +/)[3]);
                let field_channel = server.channels.find(c => "<#" + c.id + ">" == message.embeds[0].fields[3].value.split(/ +/)[0]);
                if (!field_author || !field_user || !field_role || !field_channel){
                    channel.send(`\`[DELETED]\` ${member} \`—É–¥–∞–ª–∏–ª –±–∞–≥–Ω—É—Ç—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏.\``);
                }else{
                    channel.send(`\`[DELETED]\` ${member} \`—É–¥–∞–ª–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ –æ—Ç ${field_author.displayName}, —Å ID: ${field_author.id}\``);
                }
                if (snyatie.has(field_author.id + `=>` + field_user.id)) snyatie.delete(field_author.id + `=>` + field_user.id)
                return message.delete();
            }
        }else if(event_emoji_name == "‚ùå"){
            if (message.embeds[0].title == '`Discord ¬ª –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–∏–∫ –Ω–µ–π–º–∞.`'){
                if (message.reactions.size != 3){
                    return channel.send(`\`[ERROR]\` \`–ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å! –°–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è!\``)
                }
                let field_user = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[0].value.split(/ +/)[1]);
                let field_nickname = message.embeds[0].fields[1].value.split(`\`–ù–∏–∫:\` `)[1];
                let field_role = server.roles.find(r => "<@&" + r.id + ">" == message.embeds[0].fields[2].value.split(/ +/)[3]);
                let field_channel = server.channels.find(c => "<#" + c.id + ">" == message.embeds[0].fields[3].value.split(/ +/)[0]);
                channel.send(`\`[DENY]\` <@${member.id}> \`–æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å –æ—Ç ${field_nickname}, —Å ID: ${field_user.id}\``);
                field_channel.send(`<@${field_user.id}>**,** \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${member.id}> \`–æ—Ç–∫–ª–æ–Ω–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏.\n–í–∞—à –Ω–∏–∫ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: ${field_nickname}\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–∏–∫ –Ω–∞: [–§—Ä–∞–∫—Ü–∏—è] –ò–º—è_–§–∞–º–∏–ª–∏—è [–†–∞–Ω–≥]\``)
                nrpnames.add(field_nickname); // –î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º –≤ —Å–ø–∏—Å–æ–∫ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö
                if (sened.has(field_nickname)) sened.delete(field_nickname); // –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∏–∫, —á—Ç–æ –æ–Ω –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∑–∞–ø—Ä–æ—Å
                return message.delete();
            }else if (message.embeds[0].title == '`Discord ¬ª –ó–∞–ø—Ä–æ—Å –æ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏.`'){
                if (message.reactions.size != 3){
                    return channel.send(`\`[ERROR]\` \`–ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å! –°–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è!\``)
                }
                let field_author = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[0].value.split(/ +/)[1]);
                let field_user = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[1].value.split(/ +/)[1]);
                let field_role = server.roles.find(r => "<@&" + r.id + ">" == message.embeds[0].fields[2].value.split(/ +/)[3]);
                let field_channel = server.channels.find(c => "<#" + c.id + ">" == message.embeds[0].fields[3].value.split(/ +/)[0]);
                if (member.id == field_author.id) return channel.send(`\`[ERROR]\` \`${member.displayName} —Å–≤–æ–∏ –∑–∞–ø—Ä–æ—Å—ã –æ—Ç–∫–ª–æ–Ω—è—Ç—å –Ω–µ–ª—å–∑—è!\``).then(msg => msg.delete(5000))
                if (!field_user.roles.some(r => r.id == field_role.id)){
                    if (snyatie.has(field_author.id + `=>` + field_user.id)) snyatie.delete(field_author.id + `=>` + field_user.id)
                    return message.delete();
                }
                channel.send(`\`[DENY]\` <@${member.id}> \`–æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ –æ—Ç\` <@${field_author.id}>\`, —Å ID: ${field_author.id}\``);
                field_channel.send(`<@${field_author.id}>**,** \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${member.id}> \`–æ—Ç–∫–ª–æ–Ω–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:\` <@${field_user.id}>`)
                if (snyatie.has(field_author.id + `=>` + field_user.id)) snyatie.delete(field_author.id + `=>` + field_user.id)
                return message.delete();
            }
        }else if (event_emoji_name == "‚úî"){
            if (message.embeds[0].title == '`Discord ¬ª –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–∏–∫ –Ω–µ–π–º–∞.`'){
                if (message.reactions.size != 3){
                    return channel.send(`\`[ERROR]\` \`–ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å! –°–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è!\``)
                }
                let field_user = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[0].value.split(/ +/)[1]);
                let field_nickname = message.embeds[0].fields[1].value.split(`\`–ù–∏–∫:\` `)[1];
                let field_role = server.roles.find(r => "<@&" + r.id + ">" == message.embeds[0].fields[2].value.split(/ +/)[3]);
                let field_channel = server.channels.find(c => "<#" + c.id + ">" == message.embeds[0].fields[3].value.split(/ +/)[0]);
                if (field_user.roles.some(r => field_role.id == r.id)){
                    if (sened.has(field_nickname)) sened.delete(field_nickname); // –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∏–∫, —á—Ç–æ –æ–Ω –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∑–∞–ø—Ä–æ—Å
                    return message.delete(); // –ï—Å–ª–∏ —Ä–æ–ª—å –µ—Å—Ç—å, —Ç–æ –≤—ã—Ö–æ–¥
                }
                let rolesremoved = false;
                let rolesremovedcount = 0;
                await field_user.addRole(field_role); // –í—ã–¥–∞—Ç—å —Ä–æ–ª—å –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—é —Å —Ç—ç–≥–æ–º
                channel.send(`\`[ACCEPT]\` <@${member.id}> \`–æ–¥–æ–±—Ä–∏–ª –∑–∞–ø—Ä–æ—Å –æ—Ç ${field_nickname}, —Å ID: ${field_user.id}\``);
                if (rolesremoved){
                    if (rolesremovedcount == 1){
                        field_channel.send(`<@${field_user.id}>**,** \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${member.id}> \`–æ–¥–æ–±—Ä–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏.\`\n\`–†–æ–ª—å\`  <@&${field_role.id}>  \`–±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞! ${rolesremovedcount} —Ä–æ–ª—å –¥—Ä—É–≥–æ–π —Ñ—Ä–∞–∫—Ü–∏–∏ –±—ã–ª–∞ —É–±—Ä–∞–Ω–∞.\``)
                    }else if (rolesremovedcount < 5){
                        field_channel.send(`<@${field_user.id}>**,** \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${member.id}> \`–æ–¥–æ–±—Ä–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏.\`\n\`–†–æ–ª—å\`  <@&${field_role.id}>  \`–±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞! –û—Å—Ç–∞–ª—å–Ω—ã–µ ${rolesremovedcount} —Ä–æ–ª–∏ –¥—Ä—É–≥–∏—Ö —Ñ—Ä–∞–∫—Ü–∏–π –±—ã–ª–∏ —É–±—Ä–∞–Ω—ã.\``)
                    }else{
                        field_channel.send(`<@${field_user.id}>**,** \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${member.id}> \`–æ–¥–æ–±—Ä–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏.\`\n\`–†–æ–ª—å\`  <@&${field_role.id}>  \`–±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞! –û—Å—Ç–∞–ª—å–Ω—ã–µ ${rolesremovedcount} —Ä–æ–ª–µ–π –¥—Ä—É–≥–∏—Ö —Ñ—Ä–∞–∫—Ü–∏–π –±—ã–ª–∏ —É–±—Ä–∞–Ω—ã.\``)
                    }
                }else{
                    field_channel.send(`<@${field_user.id}>**,** \`–º–æ–¥–µ—Ä–∞—Ç–æ—Ä\` <@${member.id}> \`–æ–¥–æ–±—Ä–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏.\`\n\`–†–æ–ª—å\`  <@&${field_role.id}>  \`–±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞!\``)
                }
                if (sened.has(field_nickname)) sened.delete(field_nickname); // –û—Ç–º–µ—Ç–∏—Ç—å –Ω–∏–∫, —á—Ç–æ –æ–Ω –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª –∑–∞–ø—Ä–æ—Å
                return message.delete();
            }else if (message.embeds[0].title == '`Discord ¬ª –ó–∞–ø—Ä–æ—Å –æ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏.`'){
                if (message.reactions.size != 3){
                    return channel.send(`\`[ERROR]\` \`–ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å! –°–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è!\``)
                }
                let field_author = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[0].value.split(/ +/)[1]);
                let field_user = server.members.find(m => "<@" + m.id + ">" == message.embeds[0].fields[1].value.split(/ +/)[1]);
                let field_role = server.roles.find(r => "<@&" + r.id + ">" == message.embeds[0].fields[2].value.split(/ +/)[3]);
                let field_channel = server.channels.find(c => "<#" + c.id + ">" == message.embeds[0].fields[3].value.split(/ +/)[0]);
                if (member.id == field_author.id) return channel.send(`\`[ERROR]\` \`${member.displayName} —Å–≤–æ–∏ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–µ–ª—å–∑—è!\``).then(msg => msg.delete(5000))
                if (!field_user.roles.some(r => r.id == field_role.id)){
                    if (snyatie.has(field_author.id + `=>` + field_user.id)) snyatie.delete(field_author.id + `=>` + field_user.id)
                    return message.delete();
                }
                field_user.removeRole(field_role);
                channel.send(`\`[ACCEPT]\` <@${member.id}> \`–æ–¥–æ–±—Ä–∏–ª —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ (${field_role.name}) –æ—Ç\` <@${field_author.id}>, \`–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\` <@${field_user.id}>, \`—Å ID: ${field_user.id}\``);
                field_channel.send(`**<@${field_user.id}>, —Å –≤–∞—Å —Å–Ω—è–ª–∏ —Ä–æ–ª—å**  <@&${field_role.id}>  **–ø–æ –∑–∞–ø—Ä–æ—Å—É –æ—Ç <@${field_author.id}>.**`)
                if (snyatie.has(field_author.id + `=>` + field_user.id)) snyatie.delete(field_author.id + `=>` + field_user.id)
                return message.delete()
            }
        }
    }
});